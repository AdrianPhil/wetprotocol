package protocol.game;

import com.badlogic.gdx.ApplicationListener;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.GL20;
import com.badlogic.gdx.graphics.Texture;
import com.badlogic.gdx.graphics.g2d.Batch;
import com.badlogic.gdx.scenes.scene2d.Actor;
import com.badlogic.gdx.scenes.scene2d.InputEvent;
import com.badlogic.gdx.scenes.scene2d.InputListener;
import com.badlogic.gdx.scenes.scene2d.Stage;
import com.badlogic.gdx.scenes.scene2d.Touchable;
import com.badlogic.gdx.scenes.scene2d.actions.MoveToAction;
import com.badlogic.gdx.scenes.scene2d.utils.ActorGestureListener;
import com.badlogic.gdx.scenes.scene2d.utils.DragListener;

public class SceneX implements ApplicationListener {

	private Stage stage;

	@Override
	public void create() {
		stage = new Stage();
		Gdx.input.setInputProcessor(stage);

		final MyActor myActor = new MyActor();
		// myActor.setTouchable(Touchable.enabled);

		// MoveToAction moveAction = new MoveToAction();
		// moveAction.setPosition(300f, 0f);
		// moveAction.setDuration(10f);
		// myActor.addAction(moveAction);

		stage.addActor(myActor);
	}

	@Override
	public void dispose() {
		stage.dispose();
	}

	@Override
	public void render() {
		Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);
		stage.act(Gdx.graphics.getDeltaTime());
		stage.draw();

	}

	@Override
	public void resize(int width, int height) {
	}

	@Override
	public void pause() {
	}

	@Override
	public void resume() {
	}

	public class MyActor extends Actor {
		Texture texture = new Texture(Gdx.files.internal("droplet.png"));
		float actorX = 0, actorY = 0, deltax=0,deltay=0;
		public boolean started = false;

		public MyActor() {
			setBounds(actorX, actorY, texture.getWidth(), texture.getHeight());

			addListener(new DragListener() {
				public void dragStart(InputEvent event, float x, float y, int pointer) {
					System.out.println("actor x:" +actorX);
					System.out.println("d start x:" + x);
					deltax =x;
					deltay=y;
				}

				public void drag(InputEvent event, float x, float y, int pointer) {
					 actorX = x-deltax;
					 actorY =  y-deltay;
					System.out.println("d  x:" + x +"+and actorX:"+actorX);
				}

				public void dragStop(InputEvent event, float x, float y, int pointer) {
					setBounds(actorX, actorY, texture.getWidth(), texture.getHeight());
					System.out.println("d stop x:" + x+ "and bounds x:"+actorX);
				}
			});
		}

		@Override
		public void draw(Batch batch, float alpha) {
			batch.draw(texture, actorX, actorY);
		}

		// @Override
		// public void act(float delta) {
		// if (started) {
		// actorY += 5;
		// }
		// }
	}
}